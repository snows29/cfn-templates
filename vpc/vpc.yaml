AWSTemplateFormatVersion: '2010-09-09'
Description: VPCs for Dev, Staging, and Production Environments for Tokyo Region

Parameters:
  Environment:
    Type: String
    Default: Dev
    AllowedValues:
      - Dev
      - Stg
      - Prd
  AvailabilityZone1a:
    Type: AWS::EC2::AvailabilityZone::Name
    Description: Availability Zone 1a
    Default: ap-northeast-1a
  AvailabilityZone1c:
    Type: AWS::EC2::AvailabilityZone::Name
    Description: Availability Zone 1c
    Default: ap-northeast-1c
  MyIP:
    Type: String
    Description: IP Adress (input format [0.0.0.0/0]) for security group 

Mappings:
  EnvironmentToParams:
    Dev:
      CIDRBlock: '10.0.0.0/16'
      PublicSubnet1aCIDR: '10.0.1.0/24'
      PublicSubnet02CIDR: '10.0.2.0/24'
      PrivateSubnet01CIDR: '10.0.3.0/24'
      PrivateSubnet02CIDR: '10.0.4.0/24'
    Stg:
      CIDRBlock: '10.1.0.0/16'
      PublicSubnet1aCIDR: '10.1.1.0/24'
      PublicSubnet02CIDR: '10.1.2.0/24'
      PrivateSubnet01CIDR: '10.1.3.0/24'
      PrivateSubnet02CIDR: '10.1.4.0/24'
    Prd:
      CIDRBlock: '10.2.0.0/16'
      PublicSubnet1aCIDR: '10.2.1.0/24'
      PublicSubnet02CIDR: '10.2.2.0/24'
      PrivateSubnet01CIDR: '10.2.3.0/24'
      PrivateSubnet02CIDR: '10.2.4.0/24'

Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !FindInMap [EnvironmentToParams, !Ref Environment, CIDRBlock]
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${Environment}-Vpc

  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${Environment}-Igw
  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet01:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !FindInMap [EnvironmentToParams, !Ref Environment, PublicSubnet1aCIDR]
      AvailabilityZone: !Ref AvailabilityZone1a
      Tags:
        - Key: Name
          Value: !Sub ${Environment}-PublicSubnet-1a
  PublicSubnet02:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !FindInMap [EnvironmentToParams, !Ref Environment, PublicSubnet02CIDR]
      AvailabilityZone: !Ref AvailabilityZone1c
      Tags:
        - Key: Name
          Value: !Sub ${Environment}-PublicSubnet-1c
  PrivateSubnet01:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !FindInMap [EnvironmentToParams, !Ref Environment, PrivateSubnet01CIDR]
      AvailabilityZone: !Ref AvailabilityZone1a
      Tags:
        - Key: Name
          Value: !Sub ${Environment}-PrivateSubnet-1a
  PrivateSubnet02:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !FindInMap [EnvironmentToParams, !Ref Environment, PrivateSubnet02CIDR]
      AvailabilityZone: !Ref AvailabilityZone1c
      Tags:
        - Key: Name
          Value: !Sub ${Environment}-PrivateSubnet-1c

  Public01RouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${Environment}-PublicRtb01
  Public02RouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${Environment}-PublicRtb01
  Private01RouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${Environment}-PrivateRtb01
  Private02RouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${Environment}-PrivateRtb02

  Public01Route:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref Public01RouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway
  Public02Route:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref Public02RouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway

  PublicSubnet01RouteAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet01
      RouteTableId: !Ref Public01RouteTable
  PublicSubnet02couteAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet02
      RouteTableId: !Ref Public02RouteTable
  PrivateSubnet01RouteAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnet01
      RouteTableId: !Ref Private01RouteTable
  PrivateSubnet02RouteAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnet02
      RouteTableId: !Ref Private02RouteTable

  BastionSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Security Group for Bastion Host
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref MyIP
      Tags:
        - Key: Name
          Value: !Sub ${Environment}-Bastion-Sg
  WebServerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Security Group for Web Servers
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          SourceSecurityGroupId: !Ref BastionSecurityGroup
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref MyIP
      Tags:
        - Key: Name
          Value: !Sub ${Environment}-Web-Sg

Outputs:
  VPCId:
    Description: VPC ID
    Value: !Ref VPC
    Export:
      Name: !Sub ${Environment}-VPCId
  VPCCIDRBlock:
    Description: VPC CIDR Block
    Value: !FindInMap [EnvironmentToParams, !Ref Environment, CIDRBlock]
    Export:
      Name: !Sub ${Environment}-VPCCIDRBlock
  PublicSubnet01Id:
    Description: Public Subnet ID
    Value: !Ref PublicSubnet01
    Export:
      Name: !Sub ${Environment}-PublicSubnet01Id
  PublicSubnet02Id:
    Description: Public Subnet ID
    Value: !Ref PublicSubnet02
    Export:
      Name: !Sub ${Environment}-PublicSubnet02Id
  PrivateSubnet01Id:
    Description: Private Subnet ID
    Value: !Ref PrivateSubnet01
    Export:
      Name: !Sub ${Environment}-PrivateSubnet01Id
  PrivateSubnet02Id:
    Description: Private Subnet ID
    Value: !Ref PrivateSubnet02
    Export:
      Name: !Sub ${Environment}-PrivateSubnet02Id
  BastionSecurityGroupId:
    Description: Bastion Security Group ID
    Value: !Ref BastionSecurityGroup
    Export:
      Name: !Sub ${Environment}-BastionSecurityGroupId
  WebServerSecurityGroupId:
    Description: Web Server Security Group ID
    Value: !Ref WebServerSecurityGroup
    Export:
      Name: !Sub ${Environment}-WebServerSecurityGroupId
